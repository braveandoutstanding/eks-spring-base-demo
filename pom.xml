<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion><!--描述这个POM文件是遵从哪个版本的项目描述符-->

    <groupId>com.eks</groupId><!-- groupId: groupId:项目或者组织的唯一标志，并且配置时生成的路径也是由此生成，如com.eks生成的相对路径为：/com/eks -->
    <artifactId>eks-spring-base-demo</artifactId><!-- artifactId: 项目的通用名称 -->
    <version>1.0-SNAPSHOT</version><!-- version:项目的版本 -->
    <packaging>jar</packaging><!-- packaging: 打包的机制，如pom, jar, maven-plugin, ejb, war, ear, rar, par   -->

    <name>eks-spring-base-demo</name><!-- 项目的名称， Maven 产生的文档用 -->
    <url>http://www.braveandoutstanding.com</url><!-- 哪个网站可以找到这个项目,提示如果 Maven 资源列表没有，可以直接上该网站寻找, Maven 产生的文档用 -->
    <description>Demo project for Spring Boot</description> <!-- 项目的描述, Maven 产生的文档用 -->

    <parent><!--通过parent方式继承spring-boot-starter-parent-->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <relativePath/>  <!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项 目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。-->
    </parent>

    <properties>
        <java.version>1.8</java.version><!--java的编译级别,默认为1.6-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- 文件拷贝时的编码 -->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding><!-- 文件拷贝时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding><!-- 编译时的编码 -->
    </properties>

    <dependencies>
        <!--webx项目依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--jpa依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--单元测试依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope><!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。[compile:默认范围,用于编译][provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath][runtime:在执行时需要使用][test:用于test任务时使用][system:需要外在提供相应的元素。通过systemPath来取得][systemPath:仅用于范围为system。提供相应的路径][optional:当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用-->
        </dependency>

        <!--mysql依赖-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.38</version>
        </dependency>
        <!--免去书写get、set等方法-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <scope>provided</scope>
        </dependency>
        <!--devtools:不要手动重启，支持修改后自动重启-->
        <!--2.更改idea配置,方法一:“File” -> “Settings” -> “Build,Execution,Deplyment” -> “Compiler”，选中打勾 “Build project automatically”。方法二:组合键：“Shift+Ctrl+Alt+/” ，选择 “Registry” ，选中打勾 “compiler.automake.allow.when.app.running”-->
        <!--3.Chrome禁用缓存,F12或者“Ctrl+Shift+I”，打开开发者工具，“Network” 选项卡下 选中打勾 “Disable Cache(while DevTools is open)”-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- 阿里巴巴的fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.7</version>
        </dependency>
        <!-- Google提供的工具类 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.5-jre</version>
        </dependency>
    </dependencies>

    <build><!--注：project 中添加 spring-boot-maven-plugin,主要在eclipse中使用，idea中不需要添加此配置。-->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>